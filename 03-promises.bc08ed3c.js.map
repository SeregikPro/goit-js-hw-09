{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAEAD,EAAAE,OAAOC,KAAK,CACVC,MAAO,QACPC,SAAU,YACVC,SAAU,MACVC,QAAS,EACTC,aAAc,OACdC,KAAK,EACLC,QAAS,IACTC,iBAAkB,IAClBC,aAAa,EACbC,iBAAkB,kBAClBC,aAAa,IASf,SAASC,EAAcV,EAAUW,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAEb,E,MAAUW,IAEpBG,EAAO,C,SAAEd,E,MAAUW,MAEpBA,OAhBM,CACXQ,KAAMC,SAASC,cAAc,WAG1BF,KAAKG,iBAAiB,UAgB3B,SAA2BC,GACzBA,EAAEC,iBAEF,MAAMC,EAAO,IAAIC,SAASH,EAAEI,eACtBC,EAASC,OAAOC,SAASL,EAAKM,IAAI,WAClCC,EAAQH,OAAOC,SAASL,EAAKM,IAAI,UACjCE,EAAOJ,OAAOC,SAASL,EAAKM,IAAI,SAEtC,IAAK,IAAIG,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAC/BxB,EAAcwB,EAAGF,EAAQE,EAAID,GAC1BE,MAAK,EAACnC,SAAEA,EAAQW,MAAEA,MACjBhB,EAAAE,OAAOuC,QAAQ,uBAAqBpC,QAAiBW,UAEtD0B,OAAM,EAACrC,SAAEA,EAAQW,MAAEA,MAClBhB,EAAAE,OAAOyC,QAAQ,sBAAoBtC,QAAeW","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  width: '280px',\n  position: 'right-top',\n  distance: '5px',\n  opacity: 1,\n  borderRadius: '10px',\n  rtl: true,\n  timeout: 3000,\n  messageMaxLength: 110,\n  backOverlay: false,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  closeButton: false,\n});\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', btnCreatePromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction btnCreatePromises(e) {\n  e.preventDefault();\n\n  const data = new FormData(e.currentTarget);\n  const amount = Number.parseInt(data.get('amount'));\n  const delay = Number.parseInt(data.get('delay'));\n  const step = Number.parseInt(data.get('step'));\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i, delay + i * step)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$iQIUW","parcelRequire","Notify","init","width","position","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","closeButton","$47d4ff9957288465$var$createPromise","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","form","document","querySelector","addEventListener","e","preventDefault","data","FormData","currentTarget","amount","Number","parseInt","get","delay1","step","i","then","success","catch","failure"],"version":3,"file":"03-promises.bc08ed3c.js.map"}