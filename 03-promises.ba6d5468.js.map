{"mappings":"gfAAA,IAAAA,EAAAC,EAAA,SAsBA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GAEtCC,YAAW,WACLH,EACFF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,YAEpBA,MA9BPJ,EAAAY,OAAOC,KAAK,CACVC,MAAO,QACPX,SAAU,YACVY,SAAU,MACVC,QAAS,EACTC,aAAc,OACdC,KAAK,EACLC,QAAS,IACTC,iBAAkB,IAClBC,aAAa,EACbC,iBAAkB,kBAClBC,aAAa,IAGF,CACXC,KAAMC,SAASC,cAAc,UAG1BF,KAAKG,iBAAiB,UAgB3B,SAA2BC,GACzBA,EAAEC,iBAOF,IALA,IAAMC,EAAO,IAAIC,SAASH,EAAEI,eACtBC,EAASC,OAAOC,SAASL,EAAKM,IAAI,WAClCC,EAAQH,OAAOC,SAASL,EAAKM,IAAI,UACjCE,EAAOJ,OAAOC,SAASL,EAAKM,IAAI,SAE7BG,EAAI,EAAGA,EAAIN,EAAQM,GAAK,EAC/BrC,EAAcqC,EAAGF,EAAQE,EAAID,GAC1BE,MAAK,SAAAC,G,IAAGtC,EAAQsC,EAARtC,SAAUC,EAAKqC,EAALrC,MACjBJ,EAAAY,OAAO8B,QAAQ,uBAAwCC,OAAfxC,EAAS,QAAYwC,OAANvC,EAAM,UAE9DwC,OAAM,SAAAH,G,IAAGtC,EAAQsC,EAARtC,SAAUC,EAAKqC,EAALrC,MAClBJ,EAAAY,OAAOiC,QAAQ,sBAAqCF,OAAfxC,EAAS,QAAYwC,OAANvC,EAAM,a","sources":["src/js/03-promises.js"],"sourcesContent":["import { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nNotify.init({\n  width: '280px',\n  position: 'right-top',\n  distance: '5px',\n  opacity: 1,\n  borderRadius: '10px',\n  rtl: true,\n  timeout: 3000,\n  messageMaxLength: 110,\n  backOverlay: false,\n  backOverlayColor: 'rgba(0,0,0,0.5)',\n  closeButton: false,\n});\n\nconst refs = {\n  form: document.querySelector('.form'),\n};\n\nrefs.form.addEventListener('submit', btnCreatePromises);\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\nfunction btnCreatePromises(e) {\n  e.preventDefault();\n\n  const data = new FormData(e.currentTarget);\n  const amount = Number.parseInt(data.get('amount'));\n  const delay = Number.parseInt(data.get('delay'));\n  const step = Number.parseInt(data.get('step'));\n\n  for (let i = 0; i < amount; i += 1) {\n    createPromise(i, delay + i * step)\n      .then(({ position, delay }) => {\n        Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n}\n"],"names":["$h6c0i","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","Notify","init","width","distance","opacity","borderRadius","rtl","timeout","messageMaxLength","backOverlay","backOverlayColor","closeButton","form","document","querySelector","addEventListener","e","preventDefault","data","FormData","currentTarget","amount","Number","parseInt","get","delay1","step","i","then","param","success","concat","catch","failure"],"version":3,"file":"03-promises.ba6d5468.js.map"}